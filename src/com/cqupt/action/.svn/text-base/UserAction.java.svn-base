/*
 *@Project: framework 
 *@Package: com.cqupt.action 
 *@File: UserAction.java 
 *@Date: 2015-12-11 
 *@author: chenyongzheng
 *@Copyright: V1.0 www.cqupt.edu.cn Inc. All rights reserved. 
 *@Description: 本内容仅限于公司内部传阅，禁止外泄以及用于其他的商业目的 
 */
package com.cqupt.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.UUID;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;

import com.cqupt.common.BaseAction;
import com.cqupt.common.GlobalConst;
import com.cqupt.common.PageBean;
import com.cqupt.domain.User;
import com.cqupt.service.UserService;

/**
 * 
 * @Description: 用户注册功能的实现
 * @author chenyongzheng
 * @since 2015-12-11
 * @see com.cqupt.common.BaseAction
 * 
 */
@Namespace("/user")
@Results({ @Result(name = "success", location = "/pages/user/Success.jsp"),
		@Result(name = "userList", location = "/pages/user/UserList.jsp"),
		@Result(name = "error", location = "/pages/user/Error.jsp") })
public class UserAction extends BaseAction {
	/**
	 * @Fields serialVersionUID
	 */
	private static final long serialVersionUID = 5572405848705072190L;
	/**
	 * 用于接收用户提交的信息
	 */
	User user = new User();
	/**
	 * 注册业务处理
	 */
	UserService userService;
	/**
	 * 系统日志输出类
	 */
	static Logger logger = LogManager.getLogger(UserAction.class.getName());
	/**
	 * 文件对象
	 */
	private File file;
 
	/**
	 * 提交过来的file的名字
	 */
	private String fileFileName;

	/**
	 * 提交过来的file的MIME类型
	 */
	private String fileContentType;
    /**
     * 分页
     */
	PageBean pageBean = new PageBean();
	

	/**
	 * 
	 * @Description: 用戶分頁顯示
	 * @param 参数说明
	 * @return String 返回类型
	 * @throws 异常说明
	 */
	@Action("queryUserByPage")
	public String queryUserByPage() throws Exception {
       
       pageBean = userService.queryUserByPage(user, pageBean);
		return "userList";

	}
	
	




	/**
	 * 
	 * @Title: register
	 * @Description: 用户注册
	 * @return String 返回注册成功/失败地址
	 * @throws Exception
	 *             注册异常
	 */

	@Action("register")
	public String register() {

		try {
			logger.debug("用户注册开始...");
			/**
			 * 文件保存路径
			 */
			String root = ServletActionContext.getServletContext().getRealPath(
					GlobalConst.UPLOADPATH);
			// 保存文件名,避免文件名重复
			fileFileName = UUID.randomUUID() + fileFileName;

			InputStream is = new FileInputStream(file);

			OutputStream os = new FileOutputStream(new File(root, fileFileName));

			logger.debug("文件临时文件保存路径: " + file.getPath());

			logger.debug("上传保存文件名: " + fileFileName);

			byte[] buffer = new byte[500];
			int length = 0;

			while ((length = is.read(buffer, 0, buffer.length)) != -1) {
				os.write(buffer, 0, length);
			}

			os.close();
			is.close();

			user.setUserPic(fileFileName);
			// 调用业务处理类进行注册业务处理
			User u = userService.saveUser(user);
			logger.debug(u.getUsername() + "用户注册成功...");

			return "success";
		} catch (Exception e) {
			e.printStackTrace();
			logger.debug("用户注册异常...");
			addFieldError("error", "用戶主注册异常,请联系管理员!");
			return "error";

		}

	}

	



	/**
	 * @return the file
	 */
	public File getFile() {
		return file;
	}

	/**
	 * @param file
	 *            the file to set
	 */
	public void setFile(File file) {
		this.file = file;
	}

	/**
	 * @return the fileFileName
	 */
	public String getFileFileName() {
		return fileFileName;
	}

	



	/**
	 * @param fileFileName
	 *            the fileFileName to set
	 */
	public void setFileFileName(String fileFileName) {
		this.fileFileName = fileFileName;
	}

	/**
	 * @return the fileContentType
	 */
	public String getFileContentType() {
		return fileContentType;
	}

	/**
	 * @param fileContentType
	 *            the fileContentType to set
	 */
	public void setFileContentType(String fileContentType) {
		this.fileContentType = fileContentType;
	}

	/**
	 * @return the user
	 */
	public User getUser() {
		return user;
	}

	/**
	 * @param user
	 *            the user to set
	 */
	public void setUser(User user) {
		this.user = user;
	}

	/**
	 * @param userService
	 *            the userService to set
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}



	public PageBean getPageBean() {
		return pageBean;
	}



	public void setPageBean(PageBean pageBean) {
		this.pageBean = pageBean;
	}
	
	

}
